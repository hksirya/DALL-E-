import {
  View,
  Text,
  TouchableOpacity,
  Image,
  ActivityIndicator,
  ScrollView,
  TextInput,
} from "react-native";
import React, { useState } from "react";
import { SafeAreaView } from "react-native-safe-area-context";

import { getRandomPost } from "../utils";

const CreatePost = ({ navigation }) => {
  const [form, setForm] = useState({
    name: "",
    prompt: "",
    photo: "",
  });
  const [loading, setLoading] = useState(false);
  const [generatingImg, setGeneratingImg] = useState(false);

  const generateImage = async () => {
    if (form.prompt) {
      try {
        setGeneratingImg(true);
        const response = await fetch("http://192.168.29.26:8080/api/v1/dalle", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ prompt: form.prompt }),
        });

        const data = await response.json();
        setForm({ ...form, photo: `data:image/jpeg;base64,${data.photo}` });
      } catch (error) {
        alert(error);
      } finally {
        setGeneratingImg(false);
      }
    } else {
      console.alert("Please enter a Prompt");
    }
  };

  const handleSubmit = async () => {
    if (form.name && form.prompt) {
      setLoading(true);

      try {
        const response = await fetch("http://192.168.29.26:8080/api/v1/post", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ ...form }),
        });

        await response.json();
        alert("Success");
        navigation.navigate("Home");
      } catch (error) {
        alert(error);
      } finally {
        setLoading(false);
      }
    } else {
      alert("Please enter a prompt and generate an Image");
    }
  };

  const handleSurpriseMe = () => {
    setForm({ ...form, prompt: getRandomPost(form.prompt) });
  };

  const handleClearMe = () => {
    setForm({ ...form, prompt: "" });
  };

  return (
    <SafeAreaView className="bg-white">
      <ScrollView>
        <View className="flex flex-row mt-4">
          <TouchableOpacity
            className="flex flex-start ml-4 p-4 items-center"
            onPress={() => navigation.goBack()}
          >
            <Image
              source={{
                uri: "https://www.pngfind.com/pngs/m/316-3161853_left-arrow-png-back-icon-app-png-transparent.png",
              }}
              className="w-5 h-5 z-10"
            />
          </TouchableOpacity>

          <Image
            className="w-40 h-10 object-contain items-center mx-16 scale-90"
            source={{
              uri: "https://upload.wikimedia.org/wikipedia/commons/thumb/4/4d/OpenAI_Logo.svg/800px-OpenAI_Logo.svg.png?20221228112417",
            }}
          />
        </View>

        <View className="p-4 space-y-2 mt-10">
          <Text className="text-2xl font-semibold mx-auto ">Create Post</Text>
          <Text className="text-base text-slate-600 px-4">
            Create imaginative and visually stunning images generated by DALL-E
            AI !
          </Text>
        </View>

        <View className="px-8 mt-4">
          <View className="flex mb-6 space-y-6">
            <View className="flex flex-row items-center  space-x-5">
              <Text className="block font-semibold text-base">Name</Text>
            </View>
            <TextInput
              value={form.name}
              onChangeText={(e) => setForm({ ...form, name: e })}
              placeholder="Enter your name"
              keyboardType="text"
              className="bg-gray-50 py-4 rounded-lg placeholder:p-4 border border-gray-300 focus:ring-[#4649ff] focus:border-[#4649ff] outline-none block "
            />
          </View>
          <View className="flex mb-6 space-y-6">
            <View className="flex flex-row items-center justify-between  space-x-5">
              <Text className="block font-semibold text-base">Prompt</Text>

              <View className="flex flex-row space-x-2">
                <TouchableOpacity
                  onPress={handleSurpriseMe}
                  className="bg-black p-2 mt-2  text-base rounded-md items-center"
                >
                  <Text className="text-white  text-[14px]">Surprise Me</Text>
                </TouchableOpacity>
                <TouchableOpacity
                  onPress={handleClearMe}
                  className="bg-black p-2 px-4 mt-2  text-base rounded-md items-center"
                >
                  <Text className="text-white  text-[14px]">Clear</Text>
                </TouchableOpacity>
              </View>
            </View>
            <TextInput
              value={form.prompt}
              onChangeText={(e) => setForm({ ...form, prompt: e })}
              placeholder="Enter the prompt"
              keyboardType="text"
              className="bg-gray-50 py-4 rounded-lg placeholder:p-4 border border-gray-300 focus:ring-[#4649ff] focus:border-[#4649ff] outline-none block "
            />
          </View>
        </View>

        <View className="relative bg-gray-50 border border-gray-300 text-gray-900 rounded-lg focus:ring-blue-500 focus:border-blue-500 w-72 h-72 p-3 mx-auto mt-4">
          {form.photo ? (
            <Image
              source={{ uri: form.photo }}
              className="w-full h-full object-contain"
            />
          ) : (
            <Image
              source={{
                uri: "https://cdn-icons-png.flaticon.com/512/3342/3342137.png",
              }}
              className="w-full h-full object-contain opacity-50 scale-75"
            />
          )}
          {generatingImg && (
            <View className="absolute inset-0 z-0 flex justify-center items-center bg-black/60 rounded-lg">
              <ActivityIndicator size="large" color="white" />
            </View>
          )}
        </View>
        <View className="p-6 space-y-4">
          <TouchableOpacity
            className="bg-green-500 p-3 px-4 text-base rounded-md w-full items-center "
            onPress={generateImage}
          >
            <Text className=" text-white text-[18px]">
              {generatingImg ? "Generating..." : "Generate Image"}
            </Text>
          </TouchableOpacity>
          <TouchableOpacity
            className="bg-blue-600 p-3 px-4 text-base rounded-md w-full items-center "
            onPress={handleSubmit}
          >
            <Text className=" text-white text-[18px]">
              {loading ? "Sharing..." : "Share With the community"}
            </Text>
          </TouchableOpacity>
        </View>
      </ScrollView>
    </SafeAreaView>
  );
};

export default CreatePost;
